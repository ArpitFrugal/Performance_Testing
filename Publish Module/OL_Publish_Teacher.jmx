<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">qaapi.onelern.school</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="test_publish" elementType="Argument">
            <stringProp name="Argument.name">test_publish</stringProp>
            <stringProp name="Argument.value">test-publish.onelern.school</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="wait" elementType="Argument">
            <stringProp name="Argument.name">wait</stringProp>
            <stringProp name="Argument.value">5000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="middleware" elementType="Argument">
            <stringProp name="Argument.name">middleware</stringProp>
            <stringProp name="Argument.value">salesmiddleware.onelern.school</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="url" elementType="Argument">
            <stringProp name="Argument.name">url</stringProp>
            <stringProp name="Argument.value">test.onelern.school</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">qaapi.onelern.school</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:\Users\User\Downloads\New_Users_20_Teachers.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">dp_phone_num,dp_book_version</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/signin" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/signin</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/IP" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${url}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${url}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/otps/checkuser/PHONE" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/otps/checkuser/${dp_phone_num}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${url}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${url}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_userperms" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_userperms</stringProp>
            <stringProp name="RegexExtractor.regex">,&quot;users_permissions_user&quot;:&quot;(.*?)&quot;,&quot;id&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_userperms</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_nodeid" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_nodeid</stringProp>
            <stringProp name="RegexExtractor.regex">,&quot;node&quot;:&quot;(.*?)&quot;,&quot;node_type&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_nodeid</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_roleid" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_roleid</stringProp>
            <stringProp name="RegexExtractor.regex">,&quot;role&quot;:{&quot;_id&quot;:&quot;(.*?)&quot;,&quot;name&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_roleid</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_curriculumid" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_curriculumid</stringProp>
            <stringProp name="RegexExtractor.regex">,&quot;curriculum&quot;:\[&quot;(.*?)&quot;],&quot;_id&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_curriculumid</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_license" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_license</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;license_allocations_ids&quot;:\[&quot;(.*?)&quot;],&quot;licenseassignid&quot;:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_license</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${wait}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST/otps/loginWithPassword" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;phonenumber&quot;:${dp_phone_num},&quot;password&quot;:&quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/otps/loginWithPassword</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${url}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${url}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_token</stringProp>
            <stringProp name="RegexExtractor.regex">,&quot;token&quot;:&quot;(.*?)&quot;,&quot;user&quot;:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_token</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_username" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_username</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;content&quot;:</stringProp>
            <stringProp name="RegexExtractor.template"></stringProp>
            <stringProp name="RegexExtractor.default">invalid_username</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_username_id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_username_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;firstname&quot;:&quot;(.*?)&quot;,&quot;lastname&quot;:&quot;(.*?)&quot;,&quot;email&quot;:&quot;(.*?)&quot;,&quot;gender&quot;:&quot;(.*?)&quot;,&quot;dateofbirth&quot;:&quot;(.*?)&quot;,&quot;city&quot;:&quot;(.*?)&quot;,&quot;country&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_username_id</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_firstname" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_firstname</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;firstname&quot;:&quot;(.*?)&quot;,&quot;lastname&quot;:&quot;(.*?)&quot;,&quot;email&quot;:&quot;(.*?)&quot;,&quot;gender&quot;:&quot;(.*?)&quot;,&quot;dateofbirth&quot;:&quot;(.*?)&quot;,&quot;city&quot;:&quot;(.*?)&quot;,&quot;country&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$2$</stringProp>
            <stringProp name="RegexExtractor.default">invlid_firstname</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_lastname" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_lastname</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;firstname&quot;:&quot;(.*?)&quot;,&quot;lastname&quot;:&quot;(.*?)&quot;,&quot;email&quot;:&quot;(.*?)&quot;,&quot;gender&quot;:&quot;(.*?)&quot;,&quot;dateofbirth&quot;:&quot;(.*?)&quot;,&quot;city&quot;:&quot;(.*?)&quot;,&quot;country&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$3$</stringProp>
            <stringProp name="RegexExtractor.default">invlid_lastname</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_gender" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_gender</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;firstname&quot;:&quot;(.*?)&quot;,&quot;lastname&quot;:&quot;(.*?)&quot;,&quot;email&quot;:&quot;(.*?)&quot;,&quot;gender&quot;:&quot;(.*?)&quot;,&quot;dateofbirth&quot;:&quot;(.*?)&quot;,&quot;city&quot;:&quot;(.*?)&quot;,&quot;country&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$5$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_gender</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_dob" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_dob</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;firstname&quot;:&quot;(.*?)&quot;,&quot;lastname&quot;:&quot;(.*?)&quot;,&quot;email&quot;:&quot;(.*?)&quot;,&quot;gender&quot;:&quot;(.*?)&quot;,&quot;dateofbirth&quot;:&quot;(.*?)&quot;,&quot;city&quot;:&quot;(.*?)&quot;,&quot;country&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$6$</stringProp>
            <stringProp name="RegexExtractor.default">incalid_dob</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_city" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_city</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;firstname&quot;:&quot;(.*?)&quot;,&quot;lastname&quot;:&quot;(.*?)&quot;,&quot;email&quot;:&quot;(.*?)&quot;,&quot;gender&quot;:&quot;(.*?)&quot;,&quot;dateofbirth&quot;:&quot;(.*?)&quot;,&quot;city&quot;:&quot;(.*?)&quot;,&quot;country&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$7$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_city</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_country" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_country</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;firstname&quot;:&quot;(.*?)&quot;,&quot;lastname&quot;:&quot;(.*?)&quot;,&quot;email&quot;:&quot;(.*?)&quot;,&quot;gender&quot;:&quot;(.*?)&quot;,&quot;dateofbirth&quot;:&quot;(.*?)&quot;,&quot;city&quot;:&quot;(.*?)&quot;,&quot;country&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$8$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_country</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_email" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_email</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;username&quot;:&quot;(.*?)&quot;,&quot;firstname&quot;:&quot;(.*?)&quot;,&quot;lastname&quot;:&quot;(.*?)&quot;,&quot;email&quot;:&quot;(.*?)&quot;,&quot;gender&quot;:&quot;(.*?)&quot;,&quot;dateofbirth&quot;:&quot;(.*?)&quot;,&quot;city&quot;:&quot;(.*?)&quot;,&quot;country&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$4$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_email</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/modulesByRoleandInstitution" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/modulesByRoleandInstitution/${dc_nodeid}/${dc_roleid}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${url}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${url}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Full Name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">String firstname = vars.get(&quot;dc_firstname&quot;);
String lastname = vars.get(&quot;dc_lastname&quot;);
String username = firstname + &quot; &quot; + lastname;
System.out.println(&quot;full Name -&gt; &quot; + username);
vars.put(&quot;dc_username&quot;,username);
 </stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="dc_username" elementType="Argument">
                <stringProp name="Argument.name">dc_username</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/content-dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="token" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">token</stringProp>
                <stringProp name="Argument.value">${dc_token}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${test_publish}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/content-dashboard</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${url}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/userDetails/USER_ID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/userDetails/${dc_userperms}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_nodes" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_nodes</stringProp>
            <stringProp name="RegexExtractor.regex">\[],&quot;_id&quot;:&quot;(.*?)&quot;,&quot;name&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_nodes</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/grades/Subjects?CURRICULUM" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="curriculum" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">curriculum</stringProp>
                <stringProp name="Argument.value">${dc_curriculumid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/grades/Subjects</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST/license-assignments/userbooksBasedOnLicence" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${dc_license}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/license-assignments/userbooksBasedOnLicence</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_subject_id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_subject_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;,&quot;id&quot;:&quot;(.*?)&quot;,&quot;nodes&quot;:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_subject_id</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_subject_name" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_subject_name</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;,&quot;display_name&quot;:&quot;(.*?)&quot;,&quot;encryption_key&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_subject_name</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/teacher-publish-contents?CREATEDBY&amp;STATUS&amp;_LIMIT" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="createdBy" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">createdBy</stringProp>
                <stringProp name="Argument.value">${dc_userperms}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="status" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">status</stringProp>
                <stringProp name="Argument.value">published</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_limit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_limit</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/teacher-publish-contents</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${wait}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_group_grade" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_group_grade</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;group_name&quot;:&quot;(.*?)&quot;,&quot;user_ids&quot;:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_group_grade</stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/book_version/books/SUBJECT/chapters.json" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${middleware}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">${dp_book_version}books/${dc_subject_id}/chapters.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="dc_chapter_name" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dc_chapter_name</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..title</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">invalid_chapter_name</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="dc_chapter_id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dc_chapter_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">invalid_chapter_id</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${wait}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Grade &amp; Group" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String var1 = vars.get(&quot;dc_group_grade&quot;);
String[] variables = var1.split(&quot;_&quot;);
String grade_name = variables[0];
String groupname = variables[1];
System.out.println(&quot;Grade -&gt; &quot;+ grade_name);
System.out.println(&quot;Group -&gt; &quot;+ groupname);
vars.put(&quot;dc_grade_name&quot;, grade_name);
vars.put(&quot;dc_group_name&quot;,groupname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="dc_grade_name" elementType="Argument">
                <stringProp name="Argument.name">dc_grade_name</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dc_group_name" elementType="Argument">
                <stringProp name="Argument.name">dc_group_name</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST/teacher-publish-contents" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;role&quot;:&quot;teacher&quot;,&quot;createdBy&quot;:&quot;${dc_userperms}&quot;,&quot;attachments&quot;:[],&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;likes&quot;:[],&quot;dislikes&quot;:[],&quot;username&quot;:&quot;${dc_username}&quot;,&quot;userProfile&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_6_04ecfc8758.png&quot;,&quot;content&quot;:{&quot;component&quot;:&quot;&quot;,&quot;content&quot;:&quot;publish 20 july&quot;},&quot;category&quot;:&quot;HomeWork&quot;,&quot;status&quot;:&quot;draft&quot;,&quot;users_permissions_user&quot;:&quot;${dc_userperms}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/teacher-publish-contents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_teacherpublish" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_teacherpublish</stringProp>
            <stringProp name="RegexExtractor.regex">,&quot;_id&quot;:&quot;(.*?)&quot;,&quot;published_at&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_teacherpublish</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPTIONS/groups?createdBy.id=USERID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/groups?createdBy.id=${dc_userperms}</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/nodes/getrole" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">student</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/nodes/getrole</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_roles" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_roles</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;_id&quot;:&quot;(.*?)&quot;,&quot;name&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_roles</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST/UserDetailsByNodesAndRole -1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;nodes&quot;:[&quot;${dc_nodes}&quot;],&quot;role&quot;:[&quot;${dc_roles}&quot;],&quot;keys&quot;:[&quot;nodes&quot;,&quot;role&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/UserDetailsByNodesAndRole</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_usernode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_usernode</stringProp>
            <stringProp name="RegexExtractor.regex">:\[],&quot;_id&quot;:&quot;(.*?)&quot;,&quot;name&quot;:&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_usernode</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST/UserDetailsByNodesAndRole -2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;nodes&quot;:[&quot;${dc_usernode}&quot;],&quot;keys&quot;:[&quot;nodes&quot;,&quot;role&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/UserDetailsByNodesAndRole</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_group_name" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_group_name</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.*?)&quot;,&quot;slug&quot;:&quot;Sections&quot;,&quot;code&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_group_name</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_grade_name" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dc_grade_name</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.*?)&quot;,&quot;slug&quot;:&quot;Sections&quot;,&quot;code&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$2$</stringProp>
            <stringProp name="RegexExtractor.default">invali_grade_name</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/groups" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="createdBy.id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">createdBy.id</stringProp>
                <stringProp name="Argument.value">${dc_userperms}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/groups</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST/publishes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;publishedAt&quot;:&quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss.SS)}Z&quot;,&quot;publish_status&quot;:&quot;draft&quot;,&quot;user_type&quot;:&quot;teacher&quot;,&quot;user_id&quot;:&quot;${dc_userperms}&quot;,&quot;updated_At&quot;:&quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss.SS)}Z&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;publish_to&quot;:&quot;group&quot;,&quot;publishContent&quot;:{&quot;group&quot;:{&quot;group_id&quot;:&quot;${dc_nodes}_${dc_usernode}&quot;,&quot;group_name&quot;:&quot;${dc_grade_name}_${dc_group_name}&quot;,&quot;user_ids&quot;:[{&quot;id&quot;:&quot;624e7833d87e5b773b5e6d81&quot;,&quot;username&quot;:&quot;1649309747-1&quot;,&quot;firstname&quot;:&quot;Suchir&quot;,&quot;secondname&quot;:&quot;Priyabroto&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/2_04fe971e39.png&quot;},{&quot;id&quot;:&quot;624e7834d87e5b773b5e6d83&quot;,&quot;username&quot;:&quot;1649309748-2&quot;,&quot;firstname&quot;:&quot;Yashodev&quot;,&quot;secondname&quot;:&quot;Chitturu&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7835d87e5b773b5e6d85&quot;,&quot;username&quot;:&quot;1649309749-3&quot;,&quot;firstname&quot;:&quot;Yudishtra&quot;,&quot;secondname&quot;:&quot;Vidya&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7835d87e5b773b5e6d87&quot;,&quot;username&quot;:&quot;1649309749-4&quot;,&quot;firstname&quot;:&quot;Prayag&quot;,&quot;secondname&quot;:&quot;Surnilla&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7836d87e5b773b5e6d89&quot;,&quot;username&quot;:&quot;1649309750-5&quot;,&quot;firstname&quot;:&quot;Sarang&quot;,&quot;secondname&quot;:&quot;Mangalampally&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_1_e5565678f2.png&quot;},{&quot;id&quot;:&quot;624e7837d87e5b773b5e6d8b&quot;,&quot;username&quot;:&quot;1649309751-6&quot;,&quot;firstname&quot;:&quot;Suparna&quot;,&quot;secondname&quot;:&quot;Naimesh&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7837d87e5b773b5e6d8d&quot;,&quot;username&quot;:&quot;1649309751-7&quot;,&quot;firstname&quot;:&quot;Jagmohan&quot;,&quot;secondname&quot;:&quot;Venkataraman&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7838d87e5b773b5e6d8f&quot;,&quot;username&quot;:&quot;1649309752-8&quot;,&quot;firstname&quot;:&quot;Samarjit&quot;,&quot;secondname&quot;:&quot;Gaekwad&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7838d87e5b773b5e6d91&quot;,&quot;username&quot;:&quot;1649309752-9&quot;,&quot;firstname&quot;:&quot;Kailashchandra&quot;,&quot;secondname&quot;:&quot;Kripa&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7839d87e5b773b5e6d93&quot;,&quot;username&quot;:&quot;1649309753-10&quot;,&quot;firstname&quot;:&quot;Badriprasad&quot;,&quot;secondname&quot;:&quot;Atma&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ad87e5b773b5e6d95&quot;,&quot;username&quot;:&quot;1649309754-11&quot;,&quot;firstname&quot;:&quot;Dhaval&quot;,&quot;secondname&quot;:&quot;Chandrasekaran&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ad87e5b773b5e6d97&quot;,&quot;username&quot;:&quot;1649309754-12&quot;,&quot;firstname&quot;:&quot;Ajinkya&quot;,&quot;secondname&quot;:&quot;Shaik&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783bd87e5b773b5e6d99&quot;,&quot;username&quot;:&quot;1649309755-13&quot;,&quot;firstname&quot;:&quot;Anurag&quot;,&quot;secondname&quot;:&quot;Shailesh&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783cd87e5b773b5e6d9b&quot;,&quot;username&quot;:&quot;1649309756-14&quot;,&quot;firstname&quot;:&quot;Aryan&quot;,&quot;secondname&quot;:&quot;Vakil&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783cd87e5b773b5e6d9d&quot;,&quot;username&quot;:&quot;1649309756-15&quot;,&quot;firstname&quot;:&quot;Neelesh&quot;,&quot;secondname&quot;:&quot;Modi&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783dd87e5b773b5e6d9f&quot;,&quot;username&quot;:&quot;1649309757-16&quot;,&quot;firstname&quot;:&quot;Riddhiman&quot;,&quot;secondname&quot;:&quot;Vibhuti&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ed87e5b773b5e6da1&quot;,&quot;username&quot;:&quot;1649309758-17&quot;,&quot;firstname&quot;:&quot;Madhup&quot;,&quot;secondname&quot;:&quot;Punj&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ed87e5b773b5e6da3&quot;,&quot;username&quot;:&quot;1649309758-18&quot;,&quot;firstname&quot;:&quot;Ekambar&quot;,&quot;secondname&quot;:&quot;Shubha&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783fd87e5b773b5e6da5&quot;,&quot;username&quot;:&quot;1649309759-19&quot;,&quot;firstname&quot;:&quot;Hemang&quot;,&quot;secondname&quot;:&quot;Naran&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7840d87e5b773b5e6da7&quot;,&quot;username&quot;:&quot;1649309760-20&quot;,&quot;firstname&quot;:&quot;Chittaprasad&quot;,&quot;secondname&quot;:&quot;Ranadive&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;}]},&quot;user_ids&quot;:[]}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/publishes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${wait}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPTIONS/teacher-publish-contents/TEACHER_PUBLISH_ID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/teacher-publish-contents/${dc_teacherpublish}</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET/teacher-publish-contents/TEACHER_PUBLISH_ID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/teacher-publish-contents/${dc_teacherpublish}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${wait}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT/teacher-publish-contents/TEACHER_PUBLISH_ID" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;views&quot;:1,&quot;_id&quot;:&quot;${dc_teacherpublish}&quot;,&quot;published_at&quot;:&quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss.SS)}Z&quot;,&quot;userProfile&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_6_04ecfc8758.png&quot;,&quot;dislikes&quot;:[],&quot;likes&quot;:[],&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;username&quot;:&quot;${dc_username}&quot;,&quot;content&quot;:{&quot;component&quot;:&quot;&quot;,&quot;content&quot;:&quot;publish 20 july&quot;},&quot;status&quot;:&quot;published&quot;,&quot;attachments&quot;:[],&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;createdBy&quot;:&quot;${dc_userperms}&quot;,&quot;role&quot;:&quot;teacher&quot;,&quot;createdAt&quot;:&quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss.SS)}Z&quot;,&quot;updatedAt&quot;:&quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss.SS)}Z&quot;,&quot;__v&quot;:0,&quot;users_permissions_user&quot;:{&quot;confirmed&quot;:true,&quot;blocked&quot;:false,&quot;isFirstTimeLogin&quot;:false,&quot;role_permissions&quot;:[],&quot;nodes&quot;:[&quot;624d5931d87e5b773b5e6cc2&quot;,&quot;${dc_nodes}&quot;,&quot;${dc_usernode}&quot;,&quot;610e1a807677146fdd8a2833&quot;,&quot;6160632f9e1fe601b5ee7673&quot;,&quot;616063389e1fe601b5ee7674&quot;,&quot;${dc_nodeid}&quot;],&quot;_id&quot;:&quot;${dc_userperms}&quot;,&quot;username&quot;:&quot;${dc_username_id}&quot;,&quot;firstname&quot;:&quot;${dc_firstname}&quot;,&quot;lastname&quot;:&quot;${dc_lastname}&quot;,&quot;email&quot;:&quot;${dc_email}&quot;,&quot;gender&quot;:&quot;${dc_gender}&quot;,&quot;dateofbirth&quot;:&quot;${dc_dob}&quot;,&quot;city&quot;:&quot;${dc_city}&quot;,&quot;country&quot;:&quot;${dc_country}&quot;,&quot;onelernId&quot;:&quot;${dc_username_id}&quot;,&quot;provider&quot;:&quot;local&quot;,&quot;phonenumber&quot;:&quot;${dp_phone_num}&quot;,&quot;createdAt&quot;:&quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss.SS)}Z&quot;,&quot;updatedAt&quot;:&quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss.SS)}Z&quot;,&quot;__v&quot;:0,&quot;profile&quot;:{&quot;_id&quot;:&quot;618caabb0038435d50e95710&quot;,&quot;name&quot;:&quot;Boy 6.png&quot;,&quot;alternativeText&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;hash&quot;:&quot;Boy_6_04ecfc8758&quot;,&quot;ext&quot;:&quot;.png&quot;,&quot;mime&quot;:&quot;image/png&quot;,&quot;size&quot;:21.77,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_6_04ecfc8758.png&quot;,&quot;formats&quot;:{&quot;thumbnail&quot;:{&quot;name&quot;:&quot;thumbnail_Boy 6.png&quot;,&quot;hash&quot;:&quot;thumbnail_Boy_6_04ecfc8758&quot;,&quot;ext&quot;:&quot;.png&quot;,&quot;mime&quot;:&quot;image/png&quot;,&quot;width&quot;:156,&quot;height&quot;:156,&quot;size&quot;:15.18,&quot;path&quot;:null,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/thumbnail_Boy_6_04ecfc8758.png&quot;}},&quot;provider&quot;:&quot;aws-s3&quot;,&quot;width&quot;:356,&quot;height&quot;:356,&quot;related&quot;:[&quot;618caac80038435d50e95711&quot;,&quot;61debba7923c1f029f8053c9&quot;,&quot;61588cff2c71b40d30a9e3ed&quot;,&quot;61f3890e62c0373463020355&quot;,&quot;6156aef42c71b40d30a9db30&quot;,&quot;6161293f2c71b40d30aa47f6&quot;,&quot;6161293f2c71b40d30aa47eb&quot;,&quot;616eb14b20f128111cde4dc8&quot;,&quot;6161381c2c71b40d30aa545c&quot;,&quot;616eadcd20f128111cde4d98&quot;,&quot;61dd8e60923c1f029f80537d&quot;,&quot;6163e1080fca2a64da5c8d75&quot;,&quot;616019b82c71b40d30aa42c5&quot;,&quot;6156d9f82c71b40d30a9df61&quot;,&quot;${dc_userperms}&quot;],&quot;createdAt&quot;:&quot;2021-11-11T05:31:39.675Z&quot;,&quot;updatedAt&quot;:&quot;2022-06-24T12:54:27.949Z&quot;,&quot;__v&quot;:0,&quot;id&quot;:&quot;618caabb0038435d50e95710&quot;},&quot;role&quot;:&quot;${dc_roleid}&quot;,&quot;id&quot;:&quot;${dc_userperms}&quot;},&quot;publishes&quot;:[{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;publishedAt&quot;:&quot;2022-07-20T07:11:46.666Z&quot;,&quot;publish_status&quot;:&quot;published&quot;,&quot;user_type&quot;:&quot;teacher&quot;,&quot;user_id&quot;:&quot;${dc_userperms}&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:46.666Z&quot;,&quot;publish_to&quot;:&quot;group&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.250Z&quot;,&quot;publishContent&quot;:{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9ae&quot;,&quot;user_ids&quot;:[],&quot;group&quot;:{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9af&quot;,&quot;group_id&quot;:&quot;${dc_nodes}_${dc_usernode}&quot;,&quot;group_name&quot;:&quot;${dc_grade_name}_${dc_group_name}&quot;,&quot;user_ids&quot;:[{&quot;id&quot;:&quot;624e7833d87e5b773b5e6d81&quot;,&quot;username&quot;:&quot;1649309747-1&quot;,&quot;firstname&quot;:&quot;Suchir&quot;,&quot;secondname&quot;:&quot;Priyabroto&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/2_04fe971e39.png&quot;},{&quot;id&quot;:&quot;624e7834d87e5b773b5e6d83&quot;,&quot;username&quot;:&quot;1649309748-2&quot;,&quot;firstname&quot;:&quot;Yashodev&quot;,&quot;secondname&quot;:&quot;Chitturu&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7835d87e5b773b5e6d85&quot;,&quot;username&quot;:&quot;1649309749-3&quot;,&quot;firstname&quot;:&quot;Yudishtra&quot;,&quot;secondname&quot;:&quot;Vidya&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7835d87e5b773b5e6d87&quot;,&quot;username&quot;:&quot;1649309749-4&quot;,&quot;firstname&quot;:&quot;Prayag&quot;,&quot;secondname&quot;:&quot;Surnilla&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7836d87e5b773b5e6d89&quot;,&quot;username&quot;:&quot;1649309750-5&quot;,&quot;firstname&quot;:&quot;Sarang&quot;,&quot;secondname&quot;:&quot;Mangalampally&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_1_e5565678f2.png&quot;},{&quot;id&quot;:&quot;624e7837d87e5b773b5e6d8b&quot;,&quot;username&quot;:&quot;1649309751-6&quot;,&quot;firstname&quot;:&quot;Suparna&quot;,&quot;secondname&quot;:&quot;Naimesh&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7837d87e5b773b5e6d8d&quot;,&quot;username&quot;:&quot;1649309751-7&quot;,&quot;firstname&quot;:&quot;Jagmohan&quot;,&quot;secondname&quot;:&quot;Venkataraman&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7838d87e5b773b5e6d8f&quot;,&quot;username&quot;:&quot;1649309752-8&quot;,&quot;firstname&quot;:&quot;Samarjit&quot;,&quot;secondname&quot;:&quot;Gaekwad&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7838d87e5b773b5e6d91&quot;,&quot;username&quot;:&quot;1649309752-9&quot;,&quot;firstname&quot;:&quot;Kailashchandra&quot;,&quot;secondname&quot;:&quot;Kripa&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7839d87e5b773b5e6d93&quot;,&quot;username&quot;:&quot;1649309753-10&quot;,&quot;firstname&quot;:&quot;Badriprasad&quot;,&quot;secondname&quot;:&quot;Atma&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ad87e5b773b5e6d95&quot;,&quot;username&quot;:&quot;1649309754-11&quot;,&quot;firstname&quot;:&quot;Dhaval&quot;,&quot;secondname&quot;:&quot;Chandrasekaran&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ad87e5b773b5e6d97&quot;,&quot;username&quot;:&quot;1649309754-12&quot;,&quot;firstname&quot;:&quot;Ajinkya&quot;,&quot;secondname&quot;:&quot;Shaik&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783bd87e5b773b5e6d99&quot;,&quot;username&quot;:&quot;1649309755-13&quot;,&quot;firstname&quot;:&quot;Anurag&quot;,&quot;secondname&quot;:&quot;Shailesh&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783cd87e5b773b5e6d9b&quot;,&quot;username&quot;:&quot;1649309756-14&quot;,&quot;firstname&quot;:&quot;Aryan&quot;,&quot;secondname&quot;:&quot;Vakil&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783cd87e5b773b5e6d9d&quot;,&quot;username&quot;:&quot;1649309756-15&quot;,&quot;firstname&quot;:&quot;Neelesh&quot;,&quot;secondname&quot;:&quot;Modi&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783dd87e5b773b5e6d9f&quot;,&quot;username&quot;:&quot;1649309757-16&quot;,&quot;firstname&quot;:&quot;Riddhiman&quot;,&quot;secondname&quot;:&quot;Vibhuti&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ed87e5b773b5e6da1&quot;,&quot;username&quot;:&quot;1649309758-17&quot;,&quot;firstname&quot;:&quot;Madhup&quot;,&quot;secondname&quot;:&quot;Punj&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ed87e5b773b5e6da3&quot;,&quot;username&quot;:&quot;1649309758-18&quot;,&quot;firstname&quot;:&quot;Ekambar&quot;,&quot;secondname&quot;:&quot;Shubha&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783fd87e5b773b5e6da5&quot;,&quot;username&quot;:&quot;1649309759-19&quot;,&quot;firstname&quot;:&quot;Hemang&quot;,&quot;secondname&quot;:&quot;Naran&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7840d87e5b773b5e6da7&quot;,&quot;username&quot;:&quot;1649309760-20&quot;,&quot;firstname&quot;:&quot;Chittaprasad&quot;,&quot;secondname&quot;:&quot;Ranadive&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;}],&quot;__v&quot;:0,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9af&quot;},&quot;__v&quot;:1,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9ae&quot;},&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.258Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.437Z&quot;,&quot;__v&quot;:1,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;}],&quot;studentcontents&quot;:[{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b2&quot;,&quot;user_id&quot;:&quot;624e7833d87e5b773b5e6d81&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309747-1&quot;,&quot;firstname&quot;:&quot;Suchir&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.423Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.423Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/2_04fe971e39.png&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.423Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.426Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7833d87e5b773b5e6d81&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b2&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b3&quot;,&quot;user_id&quot;:&quot;624e7834d87e5b773b5e6d83&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309748-2&quot;,&quot;firstname&quot;:&quot;Yashodev&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.460Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.460Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.461Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.462Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7834d87e5b773b5e6d83&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b3&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b4&quot;,&quot;user_id&quot;:&quot;624e7835d87e5b773b5e6d85&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309749-3&quot;,&quot;firstname&quot;:&quot;Yudishtra&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.486Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.486Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.486Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.487Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7835d87e5b773b5e6d85&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b4&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b5&quot;,&quot;user_id&quot;:&quot;624e7835d87e5b773b5e6d87&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309749-4&quot;,&quot;firstname&quot;:&quot;Prayag&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.518Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.518Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.519Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.522Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7835d87e5b773b5e6d87&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b5&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b6&quot;,&quot;user_id&quot;:&quot;624e7836d87e5b773b5e6d89&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309750-5&quot;,&quot;firstname&quot;:&quot;Sarang&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.548Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.548Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_1_e5565678f2.png&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.548Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.550Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7836d87e5b773b5e6d89&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b6&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b7&quot;,&quot;user_id&quot;:&quot;624e7837d87e5b773b5e6d8b&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309751-6&quot;,&quot;firstname&quot;:&quot;Suparna&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.583Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.583Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.583Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.586Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7837d87e5b773b5e6d8b&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b7&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b8&quot;,&quot;user_id&quot;:&quot;624e7837d87e5b773b5e6d8d&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309751-7&quot;,&quot;firstname&quot;:&quot;Jagmohan&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.608Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.608Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.608Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.610Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7837d87e5b773b5e6d8d&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b8&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b9&quot;,&quot;user_id&quot;:&quot;624e7838d87e5b773b5e6d8f&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309752-8&quot;,&quot;firstname&quot;:&quot;Samarjit&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.629Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.629Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.629Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.630Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7838d87e5b773b5e6d8f&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b9&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9ba&quot;,&quot;user_id&quot;:&quot;624e7838d87e5b773b5e6d91&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309752-9&quot;,&quot;firstname&quot;:&quot;Kailashchandra&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.650Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.650Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.650Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.651Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7838d87e5b773b5e6d91&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9ba&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9bb&quot;,&quot;user_id&quot;:&quot;624e7839d87e5b773b5e6d93&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309753-10&quot;,&quot;firstname&quot;:&quot;Badriprasad&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.665Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.665Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.665Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.666Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7839d87e5b773b5e6d93&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9bb&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9bc&quot;,&quot;user_id&quot;:&quot;624e783ad87e5b773b5e6d95&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309754-11&quot;,&quot;firstname&quot;:&quot;Dhaval&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.680Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.680Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.680Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.682Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783ad87e5b773b5e6d95&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9bc&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9bd&quot;,&quot;user_id&quot;:&quot;624e783ad87e5b773b5e6d97&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309754-12&quot;,&quot;firstname&quot;:&quot;Ajinkya&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.701Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.701Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.701Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.702Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783ad87e5b773b5e6d97&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9bd&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9be&quot;,&quot;user_id&quot;:&quot;624e783bd87e5b773b5e6d99&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309755-13&quot;,&quot;firstname&quot;:&quot;Anurag&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.717Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.717Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.717Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.718Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783bd87e5b773b5e6d99&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9be&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9bf&quot;,&quot;user_id&quot;:&quot;624e783cd87e5b773b5e6d9b&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309756-14&quot;,&quot;firstname&quot;:&quot;Aryan&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.743Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.743Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.743Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.744Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783cd87e5b773b5e6d9b&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9bf&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c0&quot;,&quot;user_id&quot;:&quot;624e783cd87e5b773b5e6d9d&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309756-15&quot;,&quot;firstname&quot;:&quot;Neelesh&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.759Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.759Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.759Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.761Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783cd87e5b773b5e6d9d&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c0&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c1&quot;,&quot;user_id&quot;:&quot;624e783dd87e5b773b5e6d9f&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309757-16&quot;,&quot;firstname&quot;:&quot;Riddhiman&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.782Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.782Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.782Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.783Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783dd87e5b773b5e6d9f&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c1&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c2&quot;,&quot;user_id&quot;:&quot;624e783ed87e5b773b5e6da1&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309758-17&quot;,&quot;firstname&quot;:&quot;Madhup&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.800Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.800Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.800Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.802Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783ed87e5b773b5e6da1&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c2&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c3&quot;,&quot;user_id&quot;:&quot;624e783ed87e5b773b5e6da3&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309758-18&quot;,&quot;firstname&quot;:&quot;Ekambar&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.820Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.820Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.821Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.822Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783ed87e5b773b5e6da3&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c3&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c4&quot;,&quot;user_id&quot;:&quot;624e783fd87e5b773b5e6da5&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309759-19&quot;,&quot;firstname&quot;:&quot;Hemang&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.838Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.838Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.838Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.840Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783fd87e5b773b5e6da5&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c4&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c5&quot;,&quot;user_id&quot;:&quot;624e7840d87e5b773b5e6da7&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309760-20&quot;,&quot;firstname&quot;:&quot;Chittaprasad&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.855Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.855Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.855Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.857Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7840d87e5b773b5e6da7&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c5&quot;}],&quot;id&quot;:&quot;${dc_teacherpublish}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/teacher-publish-contents/${dc_teacherpublish}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${wait}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler ${__threadNum}" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\User\Downloads\Publish20july (1).xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login as Teacher" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/signin-1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signin</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/otps/checkuser/9000000101-12" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/otps/checkuser/${dp_phone_num}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_userperms" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_userperms</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;users_permissions_user&quot;:&quot;(.*?)&quot;,&quot;id&quot;:&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_userperms</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_nodeid" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_nodeid</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;node&quot;:&quot;(.*?)&quot;,&quot;node_type&quot;:&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_nodeid</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_roleid" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_roleid</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;role&quot;:{&quot;_id&quot;:&quot;(.*?)&quot;,&quot;name&quot;:&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_roleid</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_curriculumid" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_curriculumid</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;curriculum&quot;:\[&quot;(.*?)&quot;],&quot;_id&quot;:&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_curriculumid</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_license" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_license</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;license_allocations_ids&quot;:\[&quot;(.*?)&quot;],&quot;licenseassignid&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_license</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/otps/loginWithPassword-20" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;phonenumber&quot;:${dp_phone_num},&quot;password&quot;:&quot;123456&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/otps/loginWithPassword</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_token</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;token&quot;:&quot;(.*?)&quot;,&quot;user&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_token</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/modulesByRoleandInstitution/624d5851d87e5b773b5e6cbf/60dbfd45dc085760fa1982c4-30" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/modulesByRoleandInstitution/${dc_nodeid}/${dc_roleid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Publish Content" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/content-dashboard-36" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">${dc_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${test_publish}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/content-dashboard</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/userDetails/624e85b8d87e5b773b5e6ec3-37" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/userDetails/${dc_userperms}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_nodes" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_nodes</stringProp>
              <stringProp name="RegexExtractor.regex">\[],&quot;_id&quot;:&quot;(.*?)&quot;,&quot;name&quot;:&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_nodes</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/grades/Subjects-39" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="curriculum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curriculum</stringProp>
                  <stringProp name="Argument.value">${dc_curriculumid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/grades/Subjects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/license-assignments/userbooksBasedOnLicence-38" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;${dc_license}&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/license-assignments/userbooksBasedOnLicence</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/teacher-publish-contents-40" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="createdBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">createdBy</stringProp>
                  <stringProp name="Argument.value">${dc_userperms}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">published</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_limit</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/teacher-publish-contents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/grades/Subjects-42" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="curriculum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curriculum</stringProp>
                  <stringProp name="Argument.value">${dc_curriculumid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/grades/Subjects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/license-assignments/userbooksBasedOnLicence-41" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;${dc_license}&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/license-assignments/userbooksBasedOnLicence</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v4/books/61606a049e1fe601b5ee768b/chapters.json-44" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${middleware}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${dp_book_version}books/${dc_subject_id}/chapters.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/teacher-publish-contents-45" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;role&quot;:&quot;teacher&quot;,&quot;createdBy&quot;:&quot;${dc_userperms}&quot;,&quot;attachments&quot;:[],&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;likes&quot;:[],&quot;dislikes&quot;:[],&quot;username&quot;:&quot;${dc_username}&quot;,&quot;userProfile&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_6_04ecfc8758.png&quot;,&quot;content&quot;:{&quot;component&quot;:&quot;&quot;,&quot;content&quot;:&quot;publish 20 july&quot;},&quot;category&quot;:&quot;HomeWork&quot;,&quot;status&quot;:&quot;draft&quot;,&quot;users_permissions_user&quot;:&quot;${dc_userperms}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/teacher-publish-contents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_teacherpublish" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_teacherpublish</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;_id&quot;:&quot;(.*?)&quot;,&quot;published_at&quot;:&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_teacherpublish</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/groups?createdBy.id=624e85b8d87e5b773b5e6ec3-46" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/groups?createdBy.id=${dc_userperms}</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/nodes/getrole-47" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">student</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/nodes/getrole</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_roles" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_roles</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;_id&quot;:&quot;(.*?)&quot;,&quot;name&quot;:&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_roles</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/UserDetailsByNodesAndRole-49" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;nodes&quot;:[&quot;${dc_nodes}&quot;],&quot;role&quot;:[&quot;${dc_roles}&quot;],&quot;keys&quot;:[&quot;nodes&quot;,&quot;role&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UserDetailsByNodesAndRole</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="dc_usernode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dc_usernode</stringProp>
              <stringProp name="RegexExtractor.regex">:\[],&quot;_id&quot;:&quot;(.*?)&quot;,&quot;name&quot;:&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">invalid_usernode</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/UserDetailsByNodesAndRole-50" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;nodes&quot;:[&quot;${dc_usernode}&quot;],&quot;keys&quot;:[&quot;nodes&quot;,&quot;role&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/UserDetailsByNodesAndRole</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/groups-48" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="createdBy.id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">createdBy.id</stringProp>
                  <stringProp name="Argument.value">${dc_userperms}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/groups</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/publishes-52" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;publishedAt&quot;:&quot;2022-07-20T07:11:46.666Z&quot;,&quot;publish_status&quot;:&quot;draft&quot;,&quot;user_type&quot;:&quot;teacher&quot;,&quot;user_id&quot;:&quot;${dc_userperms}&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:46.666Z&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;publish_to&quot;:&quot;group&quot;,&quot;publishContent&quot;:{&quot;group&quot;:{&quot;group_id&quot;:&quot;${dc_nodes}_${dc_usernode}&quot;,&quot;group_name&quot;:&quot;${dc_grade_name}_${dc_group_name}&quot;,&quot;user_ids&quot;:[{&quot;id&quot;:&quot;624e7833d87e5b773b5e6d81&quot;,&quot;username&quot;:&quot;1649309747-1&quot;,&quot;firstname&quot;:&quot;Suchir&quot;,&quot;secondname&quot;:&quot;Priyabroto&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/2_04fe971e39.png&quot;},{&quot;id&quot;:&quot;624e7834d87e5b773b5e6d83&quot;,&quot;username&quot;:&quot;1649309748-2&quot;,&quot;firstname&quot;:&quot;Yashodev&quot;,&quot;secondname&quot;:&quot;Chitturu&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7835d87e5b773b5e6d85&quot;,&quot;username&quot;:&quot;1649309749-3&quot;,&quot;firstname&quot;:&quot;Yudishtra&quot;,&quot;secondname&quot;:&quot;Vidya&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7835d87e5b773b5e6d87&quot;,&quot;username&quot;:&quot;1649309749-4&quot;,&quot;firstname&quot;:&quot;Prayag&quot;,&quot;secondname&quot;:&quot;Surnilla&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7836d87e5b773b5e6d89&quot;,&quot;username&quot;:&quot;1649309750-5&quot;,&quot;firstname&quot;:&quot;Sarang&quot;,&quot;secondname&quot;:&quot;Mangalampally&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_1_e5565678f2.png&quot;},{&quot;id&quot;:&quot;624e7837d87e5b773b5e6d8b&quot;,&quot;username&quot;:&quot;1649309751-6&quot;,&quot;firstname&quot;:&quot;Suparna&quot;,&quot;secondname&quot;:&quot;Naimesh&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7837d87e5b773b5e6d8d&quot;,&quot;username&quot;:&quot;1649309751-7&quot;,&quot;firstname&quot;:&quot;Jagmohan&quot;,&quot;secondname&quot;:&quot;Venkataraman&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7838d87e5b773b5e6d8f&quot;,&quot;username&quot;:&quot;1649309752-8&quot;,&quot;firstname&quot;:&quot;Samarjit&quot;,&quot;secondname&quot;:&quot;Gaekwad&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7838d87e5b773b5e6d91&quot;,&quot;username&quot;:&quot;1649309752-9&quot;,&quot;firstname&quot;:&quot;Kailashchandra&quot;,&quot;secondname&quot;:&quot;Kripa&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7839d87e5b773b5e6d93&quot;,&quot;username&quot;:&quot;1649309753-10&quot;,&quot;firstname&quot;:&quot;Badriprasad&quot;,&quot;secondname&quot;:&quot;Atma&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ad87e5b773b5e6d95&quot;,&quot;username&quot;:&quot;1649309754-11&quot;,&quot;firstname&quot;:&quot;Dhaval&quot;,&quot;secondname&quot;:&quot;Chandrasekaran&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ad87e5b773b5e6d97&quot;,&quot;username&quot;:&quot;1649309754-12&quot;,&quot;firstname&quot;:&quot;Ajinkya&quot;,&quot;secondname&quot;:&quot;Shaik&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783bd87e5b773b5e6d99&quot;,&quot;username&quot;:&quot;1649309755-13&quot;,&quot;firstname&quot;:&quot;Anurag&quot;,&quot;secondname&quot;:&quot;Shailesh&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783cd87e5b773b5e6d9b&quot;,&quot;username&quot;:&quot;1649309756-14&quot;,&quot;firstname&quot;:&quot;Aryan&quot;,&quot;secondname&quot;:&quot;Vakil&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783cd87e5b773b5e6d9d&quot;,&quot;username&quot;:&quot;1649309756-15&quot;,&quot;firstname&quot;:&quot;Neelesh&quot;,&quot;secondname&quot;:&quot;Modi&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783dd87e5b773b5e6d9f&quot;,&quot;username&quot;:&quot;1649309757-16&quot;,&quot;firstname&quot;:&quot;Riddhiman&quot;,&quot;secondname&quot;:&quot;Vibhuti&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ed87e5b773b5e6da1&quot;,&quot;username&quot;:&quot;1649309758-17&quot;,&quot;firstname&quot;:&quot;Madhup&quot;,&quot;secondname&quot;:&quot;Punj&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ed87e5b773b5e6da3&quot;,&quot;username&quot;:&quot;1649309758-18&quot;,&quot;firstname&quot;:&quot;Ekambar&quot;,&quot;secondname&quot;:&quot;Shubha&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783fd87e5b773b5e6da5&quot;,&quot;username&quot;:&quot;1649309759-19&quot;,&quot;firstname&quot;:&quot;Hemang&quot;,&quot;secondname&quot;:&quot;Naran&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7840d87e5b773b5e6da7&quot;,&quot;username&quot;:&quot;1649309760-20&quot;,&quot;firstname&quot;:&quot;Chittaprasad&quot;,&quot;secondname&quot;:&quot;Ranadive&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;}]},&quot;user_ids&quot;:[]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/publishes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/teacher-publish-contents/62d7aaa7691e9b0e9be2e9ac-53" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/teacher-publish-contents/${dc_teacherpublish}</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/teacher-publish-contents/62d7aaa7691e9b0e9be2e9ac-54" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/teacher-publish-contents/${dc_teacherpublish}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/teacher-publish-contents/62d7aaa7691e9b0e9be2e9ac-55" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;views&quot;:1,&quot;_id&quot;:&quot;${dc_teacherpublish}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:35.384Z&quot;,&quot;userProfile&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_6_04ecfc8758.png&quot;,&quot;dislikes&quot;:[],&quot;likes&quot;:[],&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;username&quot;:&quot;${dc_username}&quot;,&quot;content&quot;:{&quot;component&quot;:&quot;&quot;,&quot;content&quot;:&quot;publish 20 july&quot;},&quot;status&quot;:&quot;published&quot;,&quot;attachments&quot;:[],&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;createdBy&quot;:&quot;${dc_userperms}&quot;,&quot;role&quot;:&quot;teacher&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:35.404Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.325Z&quot;,&quot;__v&quot;:0,&quot;users_permissions_user&quot;:{&quot;confirmed&quot;:true,&quot;blocked&quot;:false,&quot;isFirstTimeLogin&quot;:false,&quot;role_permissions&quot;:[],&quot;nodes&quot;:[&quot;624d5931d87e5b773b5e6cc2&quot;,&quot;${dc_nodes}&quot;,&quot;${dc_usernode}&quot;,&quot;610e1a807677146fdd8a2833&quot;,&quot;6160632f9e1fe601b5ee7673&quot;,&quot;616063389e1fe601b5ee7674&quot;,&quot;${dc_nodeid}&quot;],&quot;_id&quot;:&quot;${dc_userperms}&quot;,&quot;username&quot;:&quot;${dc_username_id}&quot;,&quot;firstname&quot;:&quot;${dc_firstname}&quot;,&quot;lastname&quot;:&quot;${dc_lastname}&quot;,&quot;email&quot;:&quot;${dc_email}&quot;,&quot;gender&quot;:&quot;${dc_gender}&quot;,&quot;dateofbirth&quot;:&quot;${dc_dob}&quot;,&quot;city&quot;:&quot;${dc_city}&quot;,&quot;country&quot;:&quot;${dc_country}&quot;,&quot;onelernId&quot;:&quot;${dc_username_id}&quot;,&quot;provider&quot;:&quot;local&quot;,&quot;phonenumber&quot;:&quot;${dp_phone_num}&quot;,&quot;createdAt&quot;:&quot;2022-04-07T06:33:28.879Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-18T11:43:39.160Z&quot;,&quot;__v&quot;:0,&quot;profile&quot;:{&quot;_id&quot;:&quot;618caabb0038435d50e95710&quot;,&quot;name&quot;:&quot;Boy 6.png&quot;,&quot;alternativeText&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;hash&quot;:&quot;Boy_6_04ecfc8758&quot;,&quot;ext&quot;:&quot;.png&quot;,&quot;mime&quot;:&quot;image/png&quot;,&quot;size&quot;:21.77,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_6_04ecfc8758.png&quot;,&quot;formats&quot;:{&quot;thumbnail&quot;:{&quot;name&quot;:&quot;thumbnail_Boy 6.png&quot;,&quot;hash&quot;:&quot;thumbnail_Boy_6_04ecfc8758&quot;,&quot;ext&quot;:&quot;.png&quot;,&quot;mime&quot;:&quot;image/png&quot;,&quot;width&quot;:156,&quot;height&quot;:156,&quot;size&quot;:15.18,&quot;path&quot;:null,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/thumbnail_Boy_6_04ecfc8758.png&quot;}},&quot;provider&quot;:&quot;aws-s3&quot;,&quot;width&quot;:356,&quot;height&quot;:356,&quot;related&quot;:[&quot;618caac80038435d50e95711&quot;,&quot;61debba7923c1f029f8053c9&quot;,&quot;61588cff2c71b40d30a9e3ed&quot;,&quot;61f3890e62c0373463020355&quot;,&quot;6156aef42c71b40d30a9db30&quot;,&quot;6161293f2c71b40d30aa47f6&quot;,&quot;6161293f2c71b40d30aa47eb&quot;,&quot;616eb14b20f128111cde4dc8&quot;,&quot;6161381c2c71b40d30aa545c&quot;,&quot;616eadcd20f128111cde4d98&quot;,&quot;61dd8e60923c1f029f80537d&quot;,&quot;6163e1080fca2a64da5c8d75&quot;,&quot;616019b82c71b40d30aa42c5&quot;,&quot;6156d9f82c71b40d30a9df61&quot;,&quot;${dc_userperms}&quot;],&quot;createdAt&quot;:&quot;2021-11-11T05:31:39.675Z&quot;,&quot;updatedAt&quot;:&quot;2022-06-24T12:54:27.949Z&quot;,&quot;__v&quot;:0,&quot;id&quot;:&quot;618caabb0038435d50e95710&quot;},&quot;role&quot;:&quot;${dc_roleid}&quot;,&quot;id&quot;:&quot;${dc_userperms}&quot;},&quot;publishes&quot;:[{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;publishedAt&quot;:&quot;2022-07-20T07:11:46.666Z&quot;,&quot;publish_status&quot;:&quot;published&quot;,&quot;user_type&quot;:&quot;teacher&quot;,&quot;user_id&quot;:&quot;${dc_userperms}&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:46.666Z&quot;,&quot;publish_to&quot;:&quot;group&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.250Z&quot;,&quot;publishContent&quot;:{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9ae&quot;,&quot;user_ids&quot;:[],&quot;group&quot;:{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9af&quot;,&quot;group_id&quot;:&quot;${dc_nodes}_${dc_usernode}&quot;,&quot;group_name&quot;:&quot;${dc_grade_name}_${dc_group_name}&quot;,&quot;user_ids&quot;:[{&quot;id&quot;:&quot;624e7833d87e5b773b5e6d81&quot;,&quot;username&quot;:&quot;1649309747-1&quot;,&quot;firstname&quot;:&quot;Suchir&quot;,&quot;secondname&quot;:&quot;Priyabroto&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/2_04fe971e39.png&quot;},{&quot;id&quot;:&quot;624e7834d87e5b773b5e6d83&quot;,&quot;username&quot;:&quot;1649309748-2&quot;,&quot;firstname&quot;:&quot;Yashodev&quot;,&quot;secondname&quot;:&quot;Chitturu&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7835d87e5b773b5e6d85&quot;,&quot;username&quot;:&quot;1649309749-3&quot;,&quot;firstname&quot;:&quot;Yudishtra&quot;,&quot;secondname&quot;:&quot;Vidya&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7835d87e5b773b5e6d87&quot;,&quot;username&quot;:&quot;1649309749-4&quot;,&quot;firstname&quot;:&quot;Prayag&quot;,&quot;secondname&quot;:&quot;Surnilla&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7836d87e5b773b5e6d89&quot;,&quot;username&quot;:&quot;1649309750-5&quot;,&quot;firstname&quot;:&quot;Sarang&quot;,&quot;secondname&quot;:&quot;Mangalampally&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_1_e5565678f2.png&quot;},{&quot;id&quot;:&quot;624e7837d87e5b773b5e6d8b&quot;,&quot;username&quot;:&quot;1649309751-6&quot;,&quot;firstname&quot;:&quot;Suparna&quot;,&quot;secondname&quot;:&quot;Naimesh&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7837d87e5b773b5e6d8d&quot;,&quot;username&quot;:&quot;1649309751-7&quot;,&quot;firstname&quot;:&quot;Jagmohan&quot;,&quot;secondname&quot;:&quot;Venkataraman&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7838d87e5b773b5e6d8f&quot;,&quot;username&quot;:&quot;1649309752-8&quot;,&quot;firstname&quot;:&quot;Samarjit&quot;,&quot;secondname&quot;:&quot;Gaekwad&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7838d87e5b773b5e6d91&quot;,&quot;username&quot;:&quot;1649309752-9&quot;,&quot;firstname&quot;:&quot;Kailashchandra&quot;,&quot;secondname&quot;:&quot;Kripa&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7839d87e5b773b5e6d93&quot;,&quot;username&quot;:&quot;1649309753-10&quot;,&quot;firstname&quot;:&quot;Badriprasad&quot;,&quot;secondname&quot;:&quot;Atma&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ad87e5b773b5e6d95&quot;,&quot;username&quot;:&quot;1649309754-11&quot;,&quot;firstname&quot;:&quot;Dhaval&quot;,&quot;secondname&quot;:&quot;Chandrasekaran&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ad87e5b773b5e6d97&quot;,&quot;username&quot;:&quot;1649309754-12&quot;,&quot;firstname&quot;:&quot;Ajinkya&quot;,&quot;secondname&quot;:&quot;Shaik&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783bd87e5b773b5e6d99&quot;,&quot;username&quot;:&quot;1649309755-13&quot;,&quot;firstname&quot;:&quot;Anurag&quot;,&quot;secondname&quot;:&quot;Shailesh&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783cd87e5b773b5e6d9b&quot;,&quot;username&quot;:&quot;1649309756-14&quot;,&quot;firstname&quot;:&quot;Aryan&quot;,&quot;secondname&quot;:&quot;Vakil&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783cd87e5b773b5e6d9d&quot;,&quot;username&quot;:&quot;1649309756-15&quot;,&quot;firstname&quot;:&quot;Neelesh&quot;,&quot;secondname&quot;:&quot;Modi&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783dd87e5b773b5e6d9f&quot;,&quot;username&quot;:&quot;1649309757-16&quot;,&quot;firstname&quot;:&quot;Riddhiman&quot;,&quot;secondname&quot;:&quot;Vibhuti&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ed87e5b773b5e6da1&quot;,&quot;username&quot;:&quot;1649309758-17&quot;,&quot;firstname&quot;:&quot;Madhup&quot;,&quot;secondname&quot;:&quot;Punj&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783ed87e5b773b5e6da3&quot;,&quot;username&quot;:&quot;1649309758-18&quot;,&quot;firstname&quot;:&quot;Ekambar&quot;,&quot;secondname&quot;:&quot;Shubha&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e783fd87e5b773b5e6da5&quot;,&quot;username&quot;:&quot;1649309759-19&quot;,&quot;firstname&quot;:&quot;Hemang&quot;,&quot;secondname&quot;:&quot;Naran&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;},{&quot;id&quot;:&quot;624e7840d87e5b773b5e6da7&quot;,&quot;username&quot;:&quot;1649309760-20&quot;,&quot;firstname&quot;:&quot;Chittaprasad&quot;,&quot;secondname&quot;:&quot;Ranadive&quot;,&quot;section&quot;:&quot;${dc_group_name}&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;url&quot;:&quot;/images/default.svg&quot;}],&quot;__v&quot;:0,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9af&quot;},&quot;__v&quot;:1,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9ae&quot;},&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.258Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.437Z&quot;,&quot;__v&quot;:1,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;}],&quot;studentcontents&quot;:[{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b2&quot;,&quot;user_id&quot;:&quot;624e7833d87e5b773b5e6d81&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309747-1&quot;,&quot;firstname&quot;:&quot;Suchir&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.423Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.423Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/2_04fe971e39.png&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.423Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.426Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7833d87e5b773b5e6d81&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b2&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b3&quot;,&quot;user_id&quot;:&quot;624e7834d87e5b773b5e6d83&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309748-2&quot;,&quot;firstname&quot;:&quot;Yashodev&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.460Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.460Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.461Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.462Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7834d87e5b773b5e6d83&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b3&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b4&quot;,&quot;user_id&quot;:&quot;624e7835d87e5b773b5e6d85&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309749-3&quot;,&quot;firstname&quot;:&quot;Yudishtra&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.486Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.486Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.486Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.487Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7835d87e5b773b5e6d85&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b4&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b5&quot;,&quot;user_id&quot;:&quot;624e7835d87e5b773b5e6d87&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309749-4&quot;,&quot;firstname&quot;:&quot;Prayag&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.518Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.518Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.519Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.522Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7835d87e5b773b5e6d87&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b5&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b6&quot;,&quot;user_id&quot;:&quot;624e7836d87e5b773b5e6d89&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309750-5&quot;,&quot;firstname&quot;:&quot;Sarang&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.548Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.548Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;${scheme}://lernbook-apps.s3.ap-south-1.amazonaws.com/Boy_1_e5565678f2.png&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.548Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.550Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7836d87e5b773b5e6d89&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b6&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b7&quot;,&quot;user_id&quot;:&quot;624e7837d87e5b773b5e6d8b&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309751-6&quot;,&quot;firstname&quot;:&quot;Suparna&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.583Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.583Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.583Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.586Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7837d87e5b773b5e6d8b&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b7&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b8&quot;,&quot;user_id&quot;:&quot;624e7837d87e5b773b5e6d8d&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309751-7&quot;,&quot;firstname&quot;:&quot;Jagmohan&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.608Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.608Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.608Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.610Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7837d87e5b773b5e6d8d&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b8&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9b9&quot;,&quot;user_id&quot;:&quot;624e7838d87e5b773b5e6d8f&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309752-8&quot;,&quot;firstname&quot;:&quot;Samarjit&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.629Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.629Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.629Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.630Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7838d87e5b773b5e6d8f&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9b9&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9ba&quot;,&quot;user_id&quot;:&quot;624e7838d87e5b773b5e6d91&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309752-9&quot;,&quot;firstname&quot;:&quot;Kailashchandra&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.650Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.650Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.650Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.651Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7838d87e5b773b5e6d91&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9ba&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9bb&quot;,&quot;user_id&quot;:&quot;624e7839d87e5b773b5e6d93&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309753-10&quot;,&quot;firstname&quot;:&quot;Badriprasad&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.665Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.665Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.665Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.666Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7839d87e5b773b5e6d93&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9bb&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9bc&quot;,&quot;user_id&quot;:&quot;624e783ad87e5b773b5e6d95&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309754-11&quot;,&quot;firstname&quot;:&quot;Dhaval&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.680Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.680Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.680Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.682Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783ad87e5b773b5e6d95&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9bc&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9bd&quot;,&quot;user_id&quot;:&quot;624e783ad87e5b773b5e6d97&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309754-12&quot;,&quot;firstname&quot;:&quot;Ajinkya&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.701Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.701Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.701Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.702Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783ad87e5b773b5e6d97&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9bd&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9be&quot;,&quot;user_id&quot;:&quot;624e783bd87e5b773b5e6d99&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309755-13&quot;,&quot;firstname&quot;:&quot;Anurag&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.717Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.717Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.717Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.718Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783bd87e5b773b5e6d99&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9be&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9bf&quot;,&quot;user_id&quot;:&quot;624e783cd87e5b773b5e6d9b&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309756-14&quot;,&quot;firstname&quot;:&quot;Aryan&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.743Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.743Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.743Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.744Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783cd87e5b773b5e6d9b&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9bf&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c0&quot;,&quot;user_id&quot;:&quot;624e783cd87e5b773b5e6d9d&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309756-15&quot;,&quot;firstname&quot;:&quot;Neelesh&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.759Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.759Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.759Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.761Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783cd87e5b773b5e6d9d&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c0&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c1&quot;,&quot;user_id&quot;:&quot;624e783dd87e5b773b5e6d9f&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309757-16&quot;,&quot;firstname&quot;:&quot;Riddhiman&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.782Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.782Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.782Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.783Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783dd87e5b773b5e6d9f&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c1&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c2&quot;,&quot;user_id&quot;:&quot;624e783ed87e5b773b5e6da1&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309758-17&quot;,&quot;firstname&quot;:&quot;Madhup&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.800Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.800Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.800Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.802Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783ed87e5b773b5e6da1&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c2&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c3&quot;,&quot;user_id&quot;:&quot;624e783ed87e5b773b5e6da3&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309758-18&quot;,&quot;firstname&quot;:&quot;Ekambar&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.820Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.820Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.821Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.822Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783ed87e5b773b5e6da3&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c3&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c4&quot;,&quot;user_id&quot;:&quot;624e783fd87e5b773b5e6da5&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309759-19&quot;,&quot;firstname&quot;:&quot;Hemang&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.838Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.838Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.838Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.840Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e783fd87e5b773b5e6da5&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c4&quot;},{&quot;_id&quot;:&quot;62d7aab3691e9b0e9be2e9c5&quot;,&quot;user_id&quot;:&quot;624e7840d87e5b773b5e6da7&quot;,&quot;form&quot;:&quot;${dc_grade_name}&quot;,&quot;username&quot;:&quot;1649309760-20&quot;,&quot;firstname&quot;:&quot;Chittaprasad&quot;,&quot;formSection&quot;:&quot;${dc_group_name}&quot;,&quot;download&quot;:false,&quot;assigned_by&quot;:&quot;${dc_userperms}&quot;,&quot;assigned_At&quot;:&quot;2022-07-20T07:11:47.855Z&quot;,&quot;updated_At&quot;:&quot;2022-07-20T07:11:47.855Z&quot;,&quot;status&quot;:&quot;open&quot;,&quot;profile&quot;:&quot;/images/default.svg&quot;,&quot;category&quot;:&quot;HomeWork&quot;,&quot;subject&quot;:&quot;${dc_subject_id}&quot;,&quot;subjectName&quot;:&quot;${dc_subject_name}&quot;,&quot;chapterName&quot;:&quot;${dc_chapter_name}&quot;,&quot;chapter&quot;:&quot;${dc_chapter_id}&quot;,&quot;teacher&quot;:&quot;${dc_username}&quot;,&quot;published_at&quot;:&quot;2022-07-20T07:11:47.855Z&quot;,&quot;createdAt&quot;:&quot;2022-07-20T07:11:47.857Z&quot;,&quot;updatedAt&quot;:&quot;2022-07-20T07:11:47.877Z&quot;,&quot;__v&quot;:0,&quot;publish&quot;:&quot;62d7aab3691e9b0e9be2e9ad&quot;,&quot;users_permissions_user&quot;:&quot;624e7840d87e5b773b5e6da7&quot;,&quot;teacher_publish_content&quot;:&quot;${dc_teacherpublish}&quot;,&quot;id&quot;:&quot;62d7aab3691e9b0e9be2e9c5&quot;}],&quot;id&quot;:&quot;${dc_teacherpublish}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/teacher-publish-contents/${dc_teacherpublish}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Back and Logout" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/grades/Subjects-58" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="curriculum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curriculum</stringProp>
                  <stringProp name="Argument.value">${dc_curriculumid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/grades/Subjects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/license-assignments/userbooksBasedOnLicence-57" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;${dc_license}&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/license-assignments/userbooksBasedOnLicence</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/teacher-publish-contents-59" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="createdBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">createdBy</stringProp>
                  <stringProp name="Argument.value">${dc_userperms}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">published</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_limit</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/teacher-publish-contents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${test_publish}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/doubts/filterdata-64" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sort</stringProp>
                  <stringProp name="Argument.value">Desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">open</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/doubts/filterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/holidays-65" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="center" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">center</stringProp>
                  <stringProp name="Argument.value">624d5931d87e5b773b5e6cc2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/holidays</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assessment-schedules-63" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scheduleBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scheduleBy</stringProp>
                  <stringProp name="Argument.value">${dc_userperms}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scheduledDate_gte" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scheduledDate_gte</stringProp>
                  <stringProp name="Argument.value">2022-07-20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_sort</stringProp>
                  <stringProp name="Argument.value">scheduledDate:ASC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">scheduled</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_limit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/assessment-schedules</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/modulesByRoleandInstitution/624d5851d87e5b773b5e6cbf/60dbfd45dc085760fa1982c4-68" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/modulesByRoleandInstitution/${dc_nodeid}/${dc_roleid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assessment-schedules-69" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scheduleBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scheduleBy</stringProp>
                  <stringProp name="Argument.value">${dc_userperms}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_sort</stringProp>
                  <stringProp name="Argument.value">scheduledDate:ASC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">completed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="evalute" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">evalute</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_limit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/assessment-schedules</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/modulesByRoleandInstitution/624d5851d87e5b773b5e6cbf/60dbfd45dc085760fa1982c4-70" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/modulesByRoleandInstitution/${dc_nodeid}/${dc_roleid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${url}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${dc_token}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
